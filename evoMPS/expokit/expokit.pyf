!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module dmexpv__user__routines 
    interface dmexpv_user_interface 
        subroutine matvec(n,e_wsp_j1v_n_err,e_wsp_j1v_err) ! in :expokit:expokit.f:dmexpv:unknown_interface
            integer :: n
            double precision :: e_wsp_j1v_n_err
            double precision :: e_wsp_j1v_err
        end subroutine matvec
    end interface dmexpv_user_interface
end python module dmexpv__user__routines
python module dgexpv__user__routines 
    interface dgexpv_user_interface 
        subroutine matvec(n,e_wsp_j1v_n_err,e_wsp_j1v_err) ! in :expokit:expokit.f:dgexpv:unknown_interface
            integer :: n
            double precision :: e_wsp_j1v_n_err
            double precision :: e_wsp_j1v_err
        end subroutine matvec
    end interface dgexpv_user_interface
end python module dgexpv__user__routines
python module dsexpv__user__routines 
    interface dsexpv_user_interface 
        subroutine matvec(n,e_wsp_j1v_n_err,e_wsp_j1v_err) ! in :expokit:expokit.f:dsexpv:unknown_interface
            integer :: n
            double precision :: e_wsp_j1v_n_err
            double precision :: e_wsp_j1v_err
        end subroutine matvec
    end interface dsexpv_user_interface
end python module dsexpv__user__routines
python module zgexpv__user__routines 
    interface zgexpv_user_interface 
        subroutine matvec(n, v, w)
            integer optional, check(len(v)>=n), depend(v) :: n=len(v)
            complex*16 dimension(n), intent(in) :: v
            complex*16 dimension(n), intent(out) :: w
        end subroutine matvec
    end interface zgexpv_user_interface
end python module zgexpv__user__routines
python module zhexpv__user__routines 
    interface zhexpv_user_interface 
        subroutine matvec(n, v, w)
            integer optional, check(len(v)>=n), depend(v) :: n=len(v)
            complex*16 dimension(n), intent(in) :: v
            complex*16 dimension(n), intent(out) :: w
        end subroutine matvec
    end interface zhexpv_user_interface
end python module zhexpv__user__routines
python module dgphiv__user__routines 
    interface dgphiv_user_interface 
        subroutine matvec(n,w,e_wsp_iv_err) ! in :expokit:expokit.f:dgphiv:unknown_interface
            integer, optional,check(len(w)>=n),depend(w) :: n=len(w)
            double precision dimension(n) :: w
            double precision :: e_wsp_iv_err
        end subroutine matvec
    end interface dgphiv_user_interface
end python module dgphiv__user__routines
python module dsphiv__user__routines 
    interface dsphiv_user_interface 
        subroutine matvec(n,w,e_wsp_iv_err) ! in :expokit:expokit.f:dsphiv:unknown_interface
            integer, optional,check(len(w)>=n),depend(w) :: n=len(w)
            double precision dimension(n) :: w
            double precision :: e_wsp_iv_err
        end subroutine matvec
    end interface dsphiv_user_interface
end python module dsphiv__user__routines
python module zgphiv__user__routines 
    interface zgphiv_user_interface 
        subroutine matvec(n,w,e_wsp_iv_err) ! in :expokit:expokit.f:zgphiv:unknown_interface
            integer, optional,check(len(w)>=n),depend(w) :: n=len(w)
            complex*16 dimension(n) :: w
            complex*16 :: e_wsp_iv_err
        end subroutine matvec
    end interface zgphiv_user_interface
end python module zgphiv__user__routines
python module zhphiv__user__routines 
    interface zhphiv_user_interface 
        subroutine matvec(n,w,e_wsp_iv_err) ! in :expokit:expokit.f:zhphiv:unknown_interface
            integer, optional,check(len(w)>=n),depend(w) :: n=len(w)
            complex*16 dimension(n) :: w
            complex*16 :: e_wsp_iv_err
        end subroutine matvec
    end interface zhphiv_user_interface
end python module zhphiv__user__routines
python module expokit ! in 
    interface  ! in :expokit
        subroutine dmexpv(n,m,t,v,w,tol,anorm,wsp,lwsp,iwsp,liwsp,matvec,itrace,iflag) ! in :expokit:expokit.f
            use dmexpv__user__routines
            integer, optional,check(len(v)>=n),depend(v) :: n=len(v)
            integer :: m
            double precision :: t
            double precision dimension(n) :: v
            double precision dimension(n),depend(n) :: w
            double precision :: tol
            double precision :: anorm
            double precision dimension(lwsp) :: wsp
            integer, optional,check(len(wsp)>=lwsp),depend(wsp) :: lwsp=len(wsp)
            integer dimension(liwsp) :: iwsp
            integer, optional,check(len(iwsp)>=liwsp),depend(iwsp) :: liwsp=len(iwsp)
            external matvec
            integer :: itrace
            integer :: iflag
        end subroutine dmexpv
        subroutine dgpadm(ideg,m,t,h,ldh,wsp,lwsp,ipiv,iexph,ns,iflag) ! in :expokit:expokit.f
            integer intent(in) :: ideg
            integer, optional,intent(in),check(shape(h,1)==m),depend(h) :: m=shape(h,1)
            double precision intent(in) :: t
            double precision dimension(ldh,m),intent(in) :: h
            integer, optional,check(shape(h,0)==ldh),depend(h) :: ldh=shape(h,0)
            double precision dimension(lwsp),intent(in) :: wsp
            integer, optional,check(len(wsp)>=lwsp),depend(wsp) :: lwsp=len(wsp)
            integer dimension(m),intent(in),depend(m) :: ipiv
            integer intent(out) :: iexph
            integer intent(out) :: ns
            integer intent(out) :: iflag
        end subroutine dgpadm
        subroutine dspadm(ideg,m,t,h,ldh,wsp,lwsp,ipiv,iexph,ns,iflag) ! in :expokit:expokit.f
            integer :: ideg
            integer, optional,check(shape(h,1)==m),depend(h) :: m=shape(h,1)
            double precision :: t
            double precision dimension(ldh,m) :: h
            integer, optional,check(shape(h,0)==ldh),depend(h) :: ldh=shape(h,0)
            double precision dimension(lwsp) :: wsp
            integer, optional,check(len(wsp)>=lwsp),depend(wsp) :: lwsp=len(wsp)
            integer dimension(m),depend(m) :: ipiv
            integer :: iexph
            integer :: ns
            integer :: iflag
        end subroutine dspadm
        subroutine zgpadm(ideg,m,t,h,ldh,wsp,lwsp,ipiv,iexph,ns,iflag) ! in :expokit:expokit.f
            integer :: ideg
            integer, optional,check(shape(h,1)==m),depend(h) :: m=shape(h,1)
            double precision :: t
            complex*16 dimension(ldh,m) :: h
            integer, optional,check(shape(h,0)==ldh),depend(h) :: ldh=shape(h,0)
            complex*16 dimension(lwsp) :: wsp
            integer, optional,check(len(wsp)>=lwsp),depend(wsp) :: lwsp=len(wsp)
            integer dimension(m),depend(m) :: ipiv
            integer :: iexph
            integer :: ns
            integer :: iflag
        end subroutine zgpadm
        subroutine zhpadm(ideg,m,t,h,ldh,wsp,lwsp,ipiv,iexph,ns,iflag) ! in :expokit:expokit.f
            integer :: ideg
            integer, optional,check(shape(h,1)==m),depend(h) :: m=shape(h,1)
            double precision :: t
            complex*16 dimension(ldh,m) :: h
            integer, optional,check(shape(h,0)==ldh),depend(h) :: ldh=shape(h,0)
            complex*16 dimension(lwsp) :: wsp
            integer, optional,check(len(wsp)>=lwsp),depend(wsp) :: lwsp=len(wsp)
            integer dimension(m),depend(m) :: ipiv
            integer :: iexph
            integer :: ns
            integer :: iflag
        end subroutine zhpadm
        subroutine dgchbv(m,t,h,ldh,y,wsp,iwsp,iflag) ! in :expokit:expokit.f
            integer, optional,check(shape(h,1)==m),depend(h) :: m=shape(h,1)
            double precision :: t
            double precision dimension(ldh,m) :: h
            integer, optional,check(shape(h,0)==ldh),depend(h) :: ldh=shape(h,0)
            double precision dimension(m),depend(m) :: y
            complex*16 dimension(m*(m+2)),depend(m) :: wsp
            integer dimension(m),depend(m) :: iwsp
            integer :: iflag
        end subroutine dgchbv
        subroutine dschbv(m,t,h,ldh,y,wsp,iwsp,iflag) ! in :expokit:expokit.f
            integer, optional,check(shape(h,1)==m),depend(h) :: m=shape(h,1)
            double precision :: t
            double precision dimension(ldh,m) :: h
            integer, optional,check(shape(h,0)==ldh),depend(h) :: ldh=shape(h,0)
            double precision dimension(m),depend(m) :: y
            complex*16 dimension(m*(m+2)),depend(m) :: wsp
            integer dimension(m),depend(m) :: iwsp
            integer :: iflag
        end subroutine dschbv
        subroutine zgchbv(m,t,h,ldh,y,wsp,iwsp,iflag) ! in :expokit:expokit.f
            integer, optional,check(shape(h,1)==m),depend(h) :: m=shape(h,1)
            double precision :: t
            complex*16 dimension(ldh,m) :: h
            integer, optional,check(shape(h,0)==ldh),depend(h) :: ldh=shape(h,0)
            complex*16 dimension(m),depend(m) :: y
            complex*16 dimension(m*(m+2)),depend(m) :: wsp
            integer dimension(m),depend(m) :: iwsp
            integer :: iflag
        end subroutine zgchbv
        subroutine dnchbv(m,t,h,ldh,y,wsp) ! in :expokit:expokit.f
            integer, optional,check(shape(h,1)==m),depend(h) :: m=shape(h,1)
            double precision :: t
            double precision dimension(ldh,m) :: h
            integer, optional,check(shape(h,0)==ldh),depend(h) :: ldh=shape(h,0)
            double precision dimension(m),depend(m) :: y
            complex*16 dimension(m*(m+2)),depend(m) :: wsp
        end subroutine dnchbv
        subroutine znchbv(m,t,h,ldh,y,wsp) ! in :expokit:expokit.f
            integer, optional,check(shape(h,1)==m),depend(h) :: m=shape(h,1)
            double precision :: t
            complex*16 dimension(ldh,m) :: h
            integer, optional,check(shape(h,0)==ldh),depend(h) :: ldh=shape(h,0)
            complex*16 dimension(m),depend(m) :: y
            complex*16 dimension(m*(m+2)),depend(m) :: wsp
        end subroutine znchbv
        subroutine dgexpv(n,m,t,v,w,tol,anorm,wsp,lwsp,iwsp,liwsp,matvec,itrace,iflag) ! in :expokit:expokit.f
            use dgexpv__user__routines
            integer, optional,check(len(v)>=n),depend(v) :: n=len(v)
            integer :: m
            double precision :: t
            double precision dimension(n) :: v
            double precision dimension(n),depend(n) :: w
            double precision :: tol
            double precision :: anorm
            double precision dimension(lwsp) :: wsp
            integer, optional,check(len(wsp)>=lwsp),depend(wsp) :: lwsp=len(wsp)
            integer dimension(liwsp) :: iwsp
            integer, optional,check(len(iwsp)>=liwsp),depend(iwsp) :: liwsp=len(iwsp)
            external matvec
            integer :: itrace
            integer :: iflag
        end subroutine dgexpv
        subroutine dsexpv(n,m,t,v,w,tol,anorm,wsp,lwsp,iwsp,liwsp,matvec,itrace,iflag) ! in :expokit:expokit.f
            use dsexpv__user__routines
            integer, optional,check(len(v)>=n),depend(v) :: n=len(v)
            integer :: m
            double precision :: t
            double precision dimension(n) :: v
            double precision dimension(n),depend(n) :: w
            double precision :: tol
            double precision :: anorm
            double precision dimension(lwsp) :: wsp
            integer, optional,check(len(wsp)>=lwsp),depend(wsp) :: lwsp=len(wsp)
            integer dimension(liwsp) :: iwsp
            integer, optional,check(len(iwsp)>=liwsp),depend(iwsp) :: liwsp=len(iwsp)
            external matvec
            integer :: itrace
            integer :: iflag
        end subroutine dsexpv
        subroutine zgexpv(n,m,t,v,w,tol,anorm,wsp,lwsp,iwsp,liwsp,matvec,itrace,iflag) ! in :expokit:expokit.f
            use zgexpv__user__routines
            integer, optional,check(len(v)>=n),depend(v) :: n=len(v)
            integer :: m
            double precision :: t
            complex*16 dimension(n) :: v
            complex*16 dimension(n),depend(n) :: w
            double precision :: tol
            double precision :: anorm
            complex*16 dimension(lwsp) :: wsp
            integer, optional,check(len(wsp)>=lwsp && len(wsp) >= 10),depend(wsp) :: lwsp=len(wsp)
            integer dimension(liwsp) :: iwsp
            integer, optional,check(len(iwsp)>=liwsp && len(iwsp) >= 7),depend(iwsp) :: liwsp=len(iwsp)
            external matvec
            integer :: itrace
            integer :: iflag
        end subroutine zgexpv
        subroutine zhexpv(n,m,t,v,w,tol,anorm,wsp,lwsp,iwsp,liwsp,matvec,itrace,iflag) ! in :expokit:expokit.f
            use zhexpv__user__routines
            integer, optional,check(len(v)>=n),depend(v) :: n=len(v)
            integer :: m
            double precision :: t
            complex*16 dimension(n) :: v
            complex*16 dimension(n),depend(n) :: w
            double precision :: tol
            double precision :: anorm
            complex*16 dimension(lwsp) :: wsp
            integer, optional,check(len(wsp)>=lwsp && len(wsp) >= 10),depend(wsp) :: lwsp=len(wsp)
            integer dimension(liwsp) :: iwsp
            integer, optional,check(len(iwsp)>=liwsp && len(iwsp) >= 7),depend(iwsp) :: liwsp=len(iwsp)
            external matvec
            integer :: itrace
            integer :: iflag
        end subroutine zhexpv
        subroutine dgphiv(n,m,t,u,v,w,tol,anorm,wsp,lwsp,iwsp,liwsp,matvec,itrace,iflag) ! in :expokit:expokit.f
            use dgphiv__user__routines
            integer, optional,check(len(u)>=n),depend(u) :: n=len(u)
            integer :: m
            double precision :: t
            double precision dimension(n) :: u
            double precision dimension(n),depend(n) :: v
            double precision dimension(n),depend(n) :: w
            double precision :: tol
            double precision :: anorm
            double precision dimension(lwsp) :: wsp
            integer, optional,check(len(wsp)>=lwsp),depend(wsp) :: lwsp=len(wsp)
            integer dimension(liwsp) :: iwsp
            integer, optional,check(len(iwsp)>=liwsp),depend(iwsp) :: liwsp=len(iwsp)
            external matvec
            integer :: itrace
            integer :: iflag
        end subroutine dgphiv
        subroutine dsphiv(n,m,t,u,v,w,tol,anorm,wsp,lwsp,iwsp,liwsp,matvec,itrace,iflag) ! in :expokit:expokit.f
            use dsphiv__user__routines
            integer, optional,check(len(u)>=n),depend(u) :: n=len(u)
            integer :: m
            double precision :: t
            double precision dimension(n) :: u
            double precision dimension(n),depend(n) :: v
            double precision dimension(n),depend(n) :: w
            double precision :: tol
            double precision :: anorm
            double precision dimension(lwsp) :: wsp
            integer, optional,check(len(wsp)>=lwsp),depend(wsp) :: lwsp=len(wsp)
            integer dimension(liwsp) :: iwsp
            integer, optional,check(len(iwsp)>=liwsp),depend(iwsp) :: liwsp=len(iwsp)
            external matvec
            integer :: itrace
            integer :: iflag
        end subroutine dsphiv
        subroutine zgphiv(n,m,t,u,v,w,tol,anorm,wsp,lwsp,iwsp,liwsp,matvec,itrace,iflag) ! in :expokit:expokit.f
            use zgphiv__user__routines
            integer, optional,check(len(u)>=n),depend(u) :: n=len(u)
            integer :: m
            double precision :: t
            complex*16 dimension(n) :: u
            complex*16 dimension(n),depend(n) :: v
            complex*16 dimension(n),depend(n) :: w
            double precision :: tol
            double precision :: anorm
            complex*16 dimension(lwsp) :: wsp
            integer, optional,check(len(wsp)>=lwsp),depend(wsp) :: lwsp=len(wsp)
            integer dimension(liwsp) :: iwsp
            integer, optional,check(len(iwsp)>=liwsp),depend(iwsp) :: liwsp=len(iwsp)
            external matvec
            integer :: itrace
            integer :: iflag
        end subroutine zgphiv
        subroutine zhphiv(n,m,t,u,v,w,tol,anorm,wsp,lwsp,iwsp,liwsp,matvec,itrace,iflag) ! in :expokit:expokit.f
            use zhphiv__user__routines
            integer, optional,check(len(u)>=n),depend(u) :: n=len(u)
            integer :: m
            double precision :: t
            complex*16 dimension(n) :: u
            complex*16 dimension(n),depend(n) :: v
            complex*16 dimension(n),depend(n) :: w
            double precision :: tol
            double precision :: anorm
            complex*16 dimension(lwsp) :: wsp
            integer, optional,check(len(wsp)>=lwsp),depend(wsp) :: lwsp=len(wsp)
            integer dimension(liwsp) :: iwsp
            integer, optional,check(len(iwsp)>=liwsp),depend(iwsp) :: liwsp=len(iwsp)
            external matvec
            integer :: itrace
            integer :: iflag
        end subroutine zhphiv
    end interface 
end python module expokit

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
